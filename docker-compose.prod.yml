version: '3.8'
networks:
  xburn_network:
    driver: bridge

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: ${DB_NAME:-xen_burn_analytics}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - xburn_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "10"

  init:
    build:
      context: .
      dockerfile: Dockerfile
    command: ./init.sh
    networks:
      - xburn_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"

  metabase:
    image: metabase/metabase:latest
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${DB_NAME:-xen_burn_analytics}
      MB_DB_PORT: 5432
      MB_DB_USER: ${DB_USER:-postgres}
      MB_DB_PASS: ${DB_PASSWORD:-postgres}
      MB_DB_HOST: postgres
      JAVA_TIMEZONE: UTC
    ports:
      - "127.0.0.1:3001:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - xburn_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "10"

  indexer:
    build:
      context: .
      dockerfile: Dockerfile
    command: node dist/index.js
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-xen_burn_analytics}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_SSL=false
      - BASE_RPC_URL=${BASE_RPC_URL}
      - ETH_RPC_URL=${ETH_RPC_URL}
      - POLYGON_RPC_URL=${POLYGON_RPC_URL}
      - OPTIMISM_RPC_URL=${OPTIMISM_RPC_URL}
      - BSC_RPC_URL=${BSC_RPC_URL}
      - AVALANCHE_RPC_URL=${AVALANCHE_RPC_URL}
      - PULSECHAIN_RPC_URL=${PULSECHAIN_RPC_URL}
      - ENABLED_CHAINS=${ENABLED_CHAINS}
      - NODE_ENV=production
      - LOG_LEVEL=info
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      init:
        condition: service_completed_successfully
    networks:
      - xburn_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "10"
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

volumes:
  postgres_data: 