networks:
xburn_network:
  driver: bridge

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: xen_burn_analytics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - xburn_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  init:
    build: .
    command: ./init.sh
    networks:
      - xburn_network
    depends_on:
      postgres:
        condition: service_healthy

  metabase:
    image: metabase/metabase
    ports:
      - "3001:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - xburn_network
    restart: unless-stopped

  indexer:
    build: .
    environment:
      # Database configuration
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=xen_burn_analytics
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_SSL=false
      # Alchemy API Key
      - ALCHEMY_API_KEY=${ALCHEMY_API_KEY}
      # Enable all chains by default
      - ENABLED_CHAINS=base,ethereum,polygon,optimism,pulsechain,bsc,avalanche
      # Indexer configuration
      - INDEXER_INTERVAL_MS=15000
      - BATCH_SIZE=250
      - MAX_RETRIES=10
      - RETRY_DELAY=5000
      - MAX_BACKOFF_DELAY=60000
      # Application settings
      - API_PORT=3000
      - LOG_LEVEL=info
    ports:
      - "3000:3000"
    depends_on:
      init:
        condition: service_completed_successfully
    networks:
      - xburn_network
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data: 